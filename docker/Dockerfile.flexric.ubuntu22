ARG BASE_IMAGE=ubuntu:22.04

FROM $BASE_IMAGE AS oai-flexric-builder
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=Europe/London
ENV CFLAGS=""
ENV CXXFLAGS=""
ENV LDFLAGS=""

# Install all necessary dependencies
RUN apt-get update && \
    apt-get upgrade -y && \
    apt-get install -y --no-install-recommends \
        build-essential \
        libsctp-dev \
        git \
        gcc-12 \
        g++-12 \
        xxd \
        wget \
        tar \
        m4 \
        automake \
        libtool \
        python3 \
        cmake \
        cmake-curses-gui \
        bison \
        flex \
        gdb \
        libpcre2-dev \
        python3-dev \
        python3-pip \
        mold \
        ninja-build \
        ccache \
        valgrind \
        libasan6 \
        libsqlite3-dev \
        sqlite3 \
        psmisc \
        libsctp1 \
        pkg-config \
        libterm-readline-perl-perl && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 100 \
        --slave /usr/bin/g++ g++ /usr/bin/g++-12 \
        --slave /usr/bin/gcov gcov /usr/bin/gcov-12

# Install SWIG
RUN git clone --depth 1 --branch release-4.1 https://github.com/swig/swig.git && \
    cd swig && \
    ./autogen.sh && \
    ./configure --prefix=/usr/ && \
    make -j$(nproc) && \
    make install && \
    ldconfig && \
    cd .. && rm -rf swig

WORKDIR /

ARG CACHEBUST=1

# Create directory structure
RUN mkdir -p ./common && \
    mkdir -p ./openair2/E2AP

# Copy files
COPY ../../common/ ./common/
COPY ./openair2/. ./openair2/

# Build FlexRIC
RUN cd ./openair2/E2AP/flexric && \
    rm -rf build CMakeCache.txt && \
    mkdir -p build && \
    cd build && \
    cmake -GNinja -DCMAKE_BUILD_TYPE=Release \
                    -DXAPP_MULTILANGUAGE=OFF \
                    -DCMAKE_C_COMPILER=gcc-12 \
                    -DCMAKE_CXX_COMPILER=g++-12 \
                    -DCMAKE_C_FLAGS="-Wall -Wno-error -fno-lto" \
                    -DCMAKE_CXX_FLAGS="-Wall -Wno-error -fno-lto" \
                    -DCMAKE_SHARED_LINKER_FLAGS="-fno-lto" \
                    -DCMAKE_EXE_LINKER_FLAGS="-fno-lto" \
                    -DE2AP_VERSION="E2AP_V2" \
                    -DKPM_VERSION="KPM_V2_03" \
                    -DCMAKE_VERBOSE_MAKEFILE=ON \
                    .. && \
    ninja clean && \
    ninja -v -j1 && \
    ninja install && \
    echo "FlexRIC build completed successfully"
    # Add debug information
    RUN mkdir -p /usr/local/lib/flexric && \
    mkdir -p /flexric/build/src/xApp && \
    find /usr/local/lib/flexric -type f -name "*.so" -ls && \
    find /flexric/build/src/xApp -type f -name "*.so" -ls

# After building FlexRIC, verify the files exist
RUN echo "Verifying built files..." && \
    ls -la /flexric/build/src/xApp/ || true && \
    ls -la /usr/local/lib/flexric/ || true && \
    find /flexric -name "*.so" || true

# Second stage
FROM $BASE_IMAGE AS flexric
ENV TZ=Europe/London
ENV DEBIAN_FRONTEND=noninteractive

# Install required packages
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        libsctp1 \
        libsqlite3-0 \
        iproute2 \
        iputils-ping \
        netcat-openbsd && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /


# Verify the copied files
RUN echo "Verifying the current WORKDIR ..." && \
    ls -la . 

COPY --from=oai-flexric-builder \
    /usr/local/lib/flexric/libmac_sm.so \
    /usr/local/lib/flexric/libkpm_sm.so \
    /usr/local/lib/flexric/librlc_sm.so \
    /usr/local/lib/flexric/libslice_sm.so \
    /usr/local/lib/flexric/libtc_sm.so \
    /usr/local/lib/flexric/libgtp_sm.so \
    /usr/local/lib/flexric/libpdcp_sm.so \
    /usr/local/lib/flexric/librc_sm.so \
    /usr/local/lib/flexric/

COPY --from=oai-flexric-builder \
    /openair2/E2AP/flexric/build/src/xApp/libe42_xapp_shared.so \
    /openair2/E2AP/flexric/build/src/xApp/

# COPY --from=oai-flexric-builder \
#     /flexric/build/examples/ric/nearRT-RIC /usr/local/flexric/nearRT-RIC
COPY --from=oai-flexric-builder \
    /openair2/E2AP/flexric/build/examples/ric/nearRT-RIC /usr/local/flexric/nearRT-RIC



COPY --from=oai-flexric-builder \
    /openair2/E2AP/flexric/flexric.conf /usr/local/etc/flexric/flexric.conf


## Copy xApps
COPY --from=oai-flexric-builder \
    /openair2/E2AP/flexric/build/examples/xApp /usr/local/flexric/xApp


# Verify the files and set up dependencies
RUN ldconfig && \
    echo "--- Check shared objects dependencies for executable nearRT-RIC ---" && \
    ldd /usr/local/flexric/nearRT-RIC && \
    echo "--- Check shared objects dependencies for xApp shared library ---" && \
    ldd /openair2/E2AP/flexric/build/src/xApp/libe42_xapp_shared.so && \
    echo "--- Check shared objects dependencies for flexric shared libraries ---" && \
    ldd /usr/local/lib/flexric/*.so


# Create adummy interface for testing
# check the flexric.conf to match th ip addresses
# RUN echo '#!/bin/bash\n\
# ip link add dummy0 type dummy\n\
# ip addr add 192.168.130.61/24 dev dummy0\n\
# ip link set dummy0 up' > /usr/local/bin/create_dummy.sh && \
#     chmod +x /usr/local/bin/create_dummy.sh
# # Run the create_dummy.sh script
# CMD ["/usr/local/bin/create_dummy.sh"]

# ## E2
# EXPOSE 36421/sctp
# ## E42
# EXPOSE 36422/sctp

# No need to specify the application to run now
# Running the app will be ensured using Hlem and Kubernetes
# CMD ["stdbuf", "-o0", "nearRT-RIC"]