ARG BASE_IMAGE=ubuntu:22.04

FROM $BASE_IMAGE AS oai-flexric-builder
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=Europe/London
ENV CFLAGS=""
ENV CXXFLAGS=""
ENV LDFLAGS=""

# Install all necessary dependencies
RUN apt-get update && \
    apt-get upgrade -y && \
    apt-get install -y --no-install-recommends \
        build-essential \
        libsctp-dev \
        git \
        gcc-12 \
        g++-12 \
        xxd \
        wget \
        tar \
        m4 \
        automake \
        libtool \
        python3 \
        cmake \
        cmake-curses-gui \
        bison \
        flex \
        gdb \
        libpcre2-dev \
        python3-dev \
        python3-pip \
        mold \
        ninja-build \
        ccache \
        valgrind \
        libasan6 \
        libsqlite3-dev \
        sqlite3 \
        psmisc \
        libsctp1 && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 100 \
        --slave /usr/bin/g++ g++ /usr/bin/g++-12 \
        --slave /usr/bin/gcov gcov /usr/bin/gcov-12

# Install SWIG
RUN git clone --depth 1 --branch release-4.1 https://github.com/swig/swig.git && \
    cd swig && \
    ./autogen.sh && \
    ./configure --prefix=/usr/ && \
    make -j$(nproc) && \
    make install && \
    ldconfig && \
    cd .. && rm -rf swig

WORKDIR /flexric

ARG CACHEBUST=1
# Copy source code
COPY . /flexric


# RUN echo "Build paused for inspection" && tail -f /dev/null

# Build FlexRIC (commented out)
RUN rm -rf build CMakeCache.txt && \
    mkdir -p build && \
    cd build && \
    cmake -GNinja -DCMAKE_BUILD_TYPE=Release \
                  -DXAPP_MULTILANGUAGE=OFF \
                  -DCMAKE_C_COMPILER=gcc-12 \
                  -DCMAKE_CXX_COMPILER=g++-12 \
                  -DCMAKE_C_FLAGS="-Wall -Wno-error -fno-lto" \
                  -DCMAKE_CXX_FLAGS="-Wall -Wno-error -fno-lto" \
                  -DCMAKE_SHARED_LINKER_FLAGS="-fno-lto" \
                  -DCMAKE_EXE_LINKER_FLAGS="-fno-lto" \
                  -DCMAKE_VERBOSE_MAKEFILE=ON \
                  .. 
#     ninja clean && \
#     ninja -v -j1 && \
#     ninja install && \
#     echo "FlexRIC build completed successfully"

# RUN cd build && \
#     /usr/bin/gcc-12 -DE2AP_V2 -DKPM_V2_03 -DSERVICE_MODEL_DIR_PATH=\"/\" -DSQLITE3_XAPP -I/flexric/src -Wall -Wno-error -fno-lto -O3 -DNDEBUG -fPIC -march=native -W -Wall -Wextra -g -Wno-unused-result -Warray-bounds -Wempty-body -fstack-protector-strong -fstack-clash-protection -D_GLIBCXX_ASSERTIONS -std=gnu11 -c /flexric/src/xApp/db/sqlite3/sqlite3.c -o sqlite3.o

# RUN echo "Build stopped for debugging"

# Copy required files to /usr/local (commented out)
# COPY /flexric/build/nearRT-RIC /usr/local/bin/
# COPY /flexric/build/libe42_xapp_shared.so /usr/local/lib/
# COPY /flexric/build/examples/xApp /usr/local/bin/
# COPY /flexric/build/libflexric*.so /usr/local/lib/

FROM $BASE_IMAGE AS flexric
ENV TZ=Europe/London

RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        libsctp1 \
        libsqlite3-0 && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /usr/local/flexric

# Copy all files from the builder stage to the final image
COPY --from=oai-flexric-builder /flexric /usr/local/flexric
# Copy the necessary binaries and libraries from the builder stage (commented out)
COPY --from=oai-flexric-builder /usr/local/bin/nearRT-RIC /usr/local/bin/
COPY --from=oai-flexric-builder /usr/local/lib/libe42_xapp_shared.so /usr/local/lib/
COPY --from=oai-flexric-builder /usr/local/bin/xApp /usr/local/bin/
COPY --from=oai-flexric-builder /usr/local/lib/libflexric*.so /usr/local/lib/

RUN ldconfig

EXPOSE 36421/sctp 36422/sctp

CMD ["stdbuf", "-o0", "nearRT-RIC"]
