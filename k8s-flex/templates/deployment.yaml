{{- if .Values.multus.e2Interface.create }}
---
apiVersion: "k8s.cni.cncf.io/v1"
kind: NetworkAttachmentDefinition
metadata:
  name: {{ .Values.multus.e2Interface.name }}
spec:
  config: |
    {
      "cniVersion": "0.3.1",
      "type": "macvlan",
      "mode": "bridge",
      "master": "{{ .Values.multus.e2Interface.master }}",
      "ipam": {
        "type": "host-local",
        "subnet": "10.5.25.0/24",
        "rangeStart": "10.5.25.171",
        "rangeEnd": "10.5.25.171"
      }
    }
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "k8s-flex.fullname" . }}
  labels:
    {{- include "k8s-flex.labels" . | nindent 4 }}
spec:
  hostNetwork: true
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "k8s-flex.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "k8s-flex.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- if .Values.multus.e2Interface.create }}
      annotations:
        k8s.v1.cni.cncf.io/networks: |
          [{
            "name": "{{ .Values.multus.e2Interface.name }}",
            "ips": ["{{ .Values.multus.e2Interface.ipAdd }}/{{ .Values.multus.e2Interface.netmask }}"]
          }]
      {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "k8s-flex.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            {{- range .Values.service.ports }}
            - name: {{ .name }}
              containerPort: {{ .targetPort }}
              protocol: {{ .protocol }}
            {{- end }}
          command: 
          - /bin/sh
          - -c
          - |
            echo "Starting nearRT-RIC application..."
            echo "Launching application..." 
            exec stdbuf -o0 {{ .Values.execPath }} {{ .Values.args }} {{ .Values.configFile }} 2>&1
          resources:
            {{- if .Values.resources.define }}
            {{- toYaml .Values.resources.limits.nf | nindent 12 }}
            {{- end }}
          volumeMounts:
            - name: config-volume
              mountPath: /flexric/flexric.conf
              subPath: flexric.conf
          {{- if .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ .Chart.Name }}-configmap
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: 10  # or any other value, including 0
