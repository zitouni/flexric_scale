# {{- if .Values.network.enabled }}
# ---
# apiVersion: "k8s.cni.cncf.io/v1"
# kind: NetworkAttachmentDefinition
# metadata:
#   name: {{ .Values.network.name | default "surrey-exp-near-rt-ric-net" }}
#   namespace: {{ .Release.Namespace }} 
# spec:
#   config: |
#     {
#       "cniVersion": "0.3.1",
#       "type": "macvlan",
#       "mode": "bridge",
#       "master": "{{ .Values.network.interface.master }}",
#       "ipam": {
#         "type": "host-local",
#         "subnet": "{{ .Values.network.ipam.subnet }}",
#         "rangeStart": "{{ .Values.network.ipam.rangeStart }}",
#         "rangeEnd": "{{ .Values.network.ipam.rangeEnd }}",
#         "routes": [
#           {
#             "dst": "0.0.0.0/0",
#             "gw": "{{ .Values.network.ipam.gateway }}"
#           }
#         ]
#       },
#       "capabilities": {
#         "mac": true,
#         "ips": true
#       }
#     }
# {{- end }}
# ---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "k8s-flex.fullname" . }}
  labels:
    {{- include "k8s-flex.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "k8s-flex.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "k8s-flex.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        k8s.v1.cni.cncf.io/networks: 'none'  # Explicitly disable Multus
    spec:
      hostNetwork: true  # Add this line to use host network
      dnsPolicy: ClusterFirstWithHostNet  # Add this line for DNS resolution
      serviceAccountName: {{ include "k8s-flex.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP # Changed from status.podIP to status.hostIP
          ports:
            {{- range .Values.service.ports }}
            - name: {{ .name }}
              containerPort: {{ .targetPort }}
              protocol: {{ .protocol }}
            {{- end }}
          command: 
          - /bin/sh
          - -c
          - |
              # Create log directory and file
              mkdir -p /var/log
              touch /var/log/nearrtric.log
              
              # Function to log with timestamp
              log() {
                echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1" | tee -a /var/log/nearrtric.log
              }
              
              log "Using Host IP: $POD_IP"
              
              # Create a writable config file
              cp /flexric/flexric.conf /tmp/flexric.conf
              sed -i "s/\${POD_IP}/$POD_IP/g" /tmp/flexric.conf
              
              log "Modified configuration file content:"
              cat /tmp/flexric.conf 
              echo '\n'
              cat /var/log/nearrtric.log
              
              # Run nearRT-RIC with stdbuf to disable buffering
              exec stdbuf -oL -eL /usr/local/flexric/nearRT-RIC -c /tmp/flexric.conf 2>&1 | while IFS= read -r line; do
                echo "[$(date '+%Y-%m-%d %H:%M:%S')] $line"
              done
          volumeMounts:
            - name: config-volume
              mountPath: /flexric/flexric.conf
              subPath: flexric.conf
            - name: log-volume
              mountPath: /var/logg
      volumes:
        - name: config-volume
          configMap:
            name: {{ .Chart.Name }}-configmap
        - name: log-volume
          emptyDir: {}  # This creates a temporary volume that lives as long as the pod
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: 10
